{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","setInterval","state","currentTime","Date","toLocaleTimeString","this","setState","console","log","prevName","newName","props","name","clearInterval","className","React","Component","App","isClockVisible","clockName","Math","floor","random","hideClock","showClock","setRandomName","type","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,QAAwBC,aAAY,cAAU,GADhD,EAGEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,sBAJ5B,uDAOE,WAAqB,IAAD,OAClBC,KAAKN,QAAUC,aAAY,WACzB,EAAKM,SAAS,CAAEJ,aAAa,IAAIC,MAAOC,uBAExCG,QAAQC,IAAI,EAAKP,MAAMC,eACtB,OAZP,gCAeE,SAAmBO,GACjB,IAAMC,EAAUL,KAAKM,MAEjBF,IAAaC,GAEfH,QAAQC,IAAR,qCAA0CC,EAASG,KAAnD,eAA8DF,EAAQE,SApB5E,kCAwBE,WACMP,KAAKN,SACPc,cAAcR,KAAKN,WA1BzB,oBA8BE,WACE,IAAQG,EAAgBG,KAAKJ,MAArBC,YAER,OACE,qBAAKY,UAAU,QAAf,SACE,mBAAGA,UAAU,cAAb,SAA4BZ,UAnCpC,GAA2Ba,IAAMC,WCA3BC,E,4MACJhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,WACV,EAAKjB,SAAS,CACZY,gBAAgB,K,EAIpBM,UAAY,WACV,EAAKlB,SAAS,CACZY,gBAAgB,K,EAIpBO,cAAgB,WACd,EAAKnB,SAAS,CACZa,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,MAAsCjB,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCI,GAAkB,cAAC,EAAD,CAAON,KAAMO,IAChC,wBAAQO,KAAK,SAASC,UAAWT,EAAgBU,QAASvB,KAAKkB,UAA/D,wBAGA,wBAAQG,KAAK,SAASC,SAAUT,EAAgBU,QAASvB,KAAKmB,UAA9D,wBAGA,wBAAQE,KAAK,SAASE,QAASvB,KAAKoB,cAApC,6B,GArCUV,IAAMC,WA6CTC,ICpDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f16d7c0e.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentTime: string\n};\n\ntype Props = {\n  name: number\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  state = {\n    currentTime: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ currentTime: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevName: Props) {\n    const newName = this.props;\n\n    if (prevName !== newName) {\n    // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevName.name} to ${newName.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__time\">{currentTime}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 100),\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <button type=\"button\" disabled={!isClockVisible} onClick={this.hideClock}>\n          Hide Clock\n        </button>\n        <button type=\"button\" disabled={isClockVisible} onClick={this.showClock}>\n          Show Clock\n        </button>\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}